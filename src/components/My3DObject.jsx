// // Ten plik jest miejscem na Twój własny obiekt 3D (Three.js, react-three-fiber)
// // Dodaj tutaj kod obiektu, np. Mesh, Model, Lights itp.

// export const My3DObject = () => {
//   // Na razie pusta funkcja — gotowa do rozbudowy.
//   return null;
// };
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

// import React, { useRef } from 'react'
// import { useGLTF } from '@react-three/drei'

// export function Model(props) {
//   const { nodes, materials } = useGLTF('./aparat z neta wireframe.glb')
//   return (
//     <group {...props} dispose={null}>
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.ImageToStlcom_phothon_camera.geometry}
//         material={nodes.ImageToStlcom_phothon_camera.material}
//         rotation={[Math.PI / 4, 0, 0]}
//       />
//     </group>
//   )
// }

// useGLTF.preload('./aparat z neta wireframe.glb')
import React, { useRef, useEffect, useState } from 'react';
import { useFrame } from '@react-three/fiber';
import { useGLTF } from '@react-three/drei';

export function My3DObject({ isFocused, cursorPos }) {
  const group = useRef();
  const { nodes } = useGLTF('/portfolio.com/aparatznetawireframe.glb');
  const [rotation, setRotation] = useState([0, 0, 0]);
  
  // Animate rotation
  useFrame(() => {
    if (!group.current) return;
    if (!isFocused) {
      // Simple auto-rotation when page not focused
      group.current.rotation.y += 0.01;
    } else {
      // Rotate toward cursor position (cursorPos: {x, y} in [-1, 1])
      group.current.rotation.y += (cursorPos.x * Math.PI - group.current.rotation.y) * 0.05;
      group.current.rotation.x += (cursorPos.y * Math.PI/8 - group.current.rotation.x) * 0.05;
    }
  });

  return (
    <group ref={group} scale={[0.05, 0.05, 0.05]} rotation={[0, Math.PI / 4, 0]} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ImageToStlcom_phothon_camera.geometry}
        material={nodes.ImageToStlcom_phothon_camera.material}
      />
    </group>
  );
}

useGLTF.preload('/portfolio.com/aparatznetawireframe.glb');